<UserControl x:Class="Ui.ListOfCluster"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Ui"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <DataGrid
  Margin="0 8 0 0"
  ItemsSource="{Binding}"
  CanUserSortColumns="True"
  CanUserAddRows="False"
  AutoGenerateColumns="False"
  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
  materialDesign:DataGridAssist.ColumnHeaderPadding="8"
            Width="auto">
            <DataGrid.Columns>

                <DataGridTextColumn
                   
                                Header="Id"
      Binding="{Binding Path=Id}"
      
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:DataGridTextColumn
      Binding="{Binding Path=Length}" 
                                Header="Report Count"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:DataGridTextColumn
      Binding="{Binding RealPlace.loc.display_name}" 
                                Header="Location"
      MaxLength="255"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:DataGridTextColumn
      Binding="{Binding RealPlace.dateTime}" 
                                Header="dateTime"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">

                </materialDesign:DataGridTextColumn>

                
                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->

            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
